// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`quiz page tests renders body correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Body
    onAnswer={[MockFunction]}
    quiz={Array []}
    showResults={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <QuizCard />,
        <p
          className="answer"
        >
          <a
            id="select-true"
            onClick={[Function]}
          >
            True
          </a>
          <a
            id="select-false"
            onClick={[Function]}
          >
            False
          </a>
        </p>,
        <p
          className="quiz-counter"
        >
          1
          /
          0
        </p>,
        <a
          onClick={[Function]}
        >
          Skip question
        </a>,
      ],
      "className": "container",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "item": undefined,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <a
              id="select-true"
              onClick={[Function]}
            >
              True
            </a>,
            <a
              id="select-false"
              onClick={[Function]}
            >
              False
            </a>,
          ],
          "className": "answer",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "True",
              "id": "select-true",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "True",
            "type": "a",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "False",
              "id": "select-false",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "False",
            "type": "a",
          },
        ],
        "type": "p",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            1,
            "/",
            0,
          ],
          "className": "quiz-counter",
        },
        "ref": null,
        "rendered": Array [
          1,
          "/",
          0,
        ],
        "type": "p",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Skip question",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": "Skip question",
        "type": "a",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <QuizCard />,
          <p
            className="answer"
          >
            <a
              id="select-true"
              onClick={[Function]}
            >
              True
            </a>
            <a
              id="select-false"
              onClick={[Function]}
            >
              False
            </a>
          </p>,
          <p
            className="quiz-counter"
          >
            1
            /
            0
          </p>,
          <a
            onClick={[Function]}
          >
            Skip question
          </a>,
        ],
        "className": "container",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "item": undefined,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <a
                id="select-true"
                onClick={[Function]}
              >
                True
              </a>,
              <a
                id="select-false"
                onClick={[Function]}
              >
                False
              </a>,
            ],
            "className": "answer",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "True",
                "id": "select-true",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "True",
              "type": "a",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "False",
                "id": "select-false",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "False",
              "type": "a",
            },
          ],
          "type": "p",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              1,
              "/",
              0,
            ],
            "className": "quiz-counter",
          },
          "ref": null,
          "rendered": Array [
            1,
            "/",
            0,
          ],
          "type": "p",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Skip question",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": "Skip question",
          "type": "a",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`quiz page tests renders correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Quiz
    dispatch={[MockFunction]}
    goTo={[MockFunction]}
    quiz={
      Object {
        "results": Array [],
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "onAnswer": [Function],
      "quiz": Array [],
      "showResults": [Function],
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "onAnswer": [Function],
        "quiz": Array [],
        "showResults": [Function],
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
